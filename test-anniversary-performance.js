/**
 * Test script to verify anniversary event performance improvements
 */

const { performance } = require('perf_hooks');

// Test the backend anniversary event generation
async function testAnniversaryEventGeneration() {
  try {
    console.log('🚀 Testing Anniversary Event Performance Improvements');
    console.log('=====================================\n');

    const baseUrl = 'http://localhost:3000';
    
    // Test 1: Generate anniversary events via API
    console.log('📅 Test 1: Backend Anniversary Event Generation');
    const startTime = performance.now();
    
    const response = await fetch(`${baseUrl}/api/calendar/anniversary-events/generate`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        startDate: new Date().toISOString(),
        endDate: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString() // 1 year ahead
      })
    });

    const generationTime = performance.now() - startTime;
    
    if (response.ok) {
      const result = await response.json();
      console.log(`✅ Generation successful in ${generationTime.toFixed(2)}ms`);
      console.log(`   📊 Created: ${result.created}, Skipped: ${result.skipped}`);
      if (result.errors.length > 0) {
        console.log(`   ⚠️  Errors: ${result.errors.length}`);
      }
    } else {
      console.log(`❌ Generation failed: ${response.status} ${response.statusText}`);
      const error = await response.text();
      console.log(`   Error details: ${error}`);
    }

    console.log('');

    // Test 2: Fetch events via fast API
    console.log('⚡ Test 2: Fast Calendar Events API');
    const fetchStartTime = performance.now();
    
    const eventsResponse = await fetch(`${baseUrl}/api/calendar/events/fast?limit=50`);
    const fetchTime = performance.now() - fetchStartTime;
    
    if (eventsResponse.ok) {
      const eventsData = await eventsResponse.json();
      console.log(`✅ Events fetched in ${fetchTime.toFixed(2)}ms`);
      console.log(`   📊 Total events: ${eventsData.pagination.total}`);
      console.log(`   📈 Cache hit: ${eventsData.cacheHit ? 'Yes' : 'No'}`);
      
      const anniversaryEvents = eventsData.events.filter(e => e.isAutoGenerated === true);
      console.log(`   🎉 Anniversary events: ${anniversaryEvents.length}`);
    } else {
      console.log(`❌ Events fetch failed: ${eventsResponse.status} ${eventsResponse.statusText}`);
    }

    console.log('');

    // Test 3: Check sync status
    console.log('📊 Test 3: Anniversary Events Sync Status');
    const statusResponse = await fetch(`${baseUrl}/api/calendar/anniversary-events/sync`);
    
    if (statusResponse.ok) {
      const statusData = await statusResponse.json();
      console.log('✅ Sync status retrieved');
      console.log(`   📊 Total anniversary events in DB: ${statusData.stats.totalAnniversaryEvents}`);
      console.log(`   📅 Upcoming events: ${statusData.stats.upcomingEvents}`);
    } else {
      console.log(`❌ Status check failed: ${statusResponse.status} ${statusResponse.statusText}`);
    }

    console.log('');
    console.log('🎯 Performance Improvement Summary:');
    console.log('- ✅ Anniversary events now generated server-side');
    console.log('- ✅ Events stored in database with isAutoGenerated flag');
    console.log('- ✅ Client-side generation removed (major performance boost)');
    console.log('- ✅ Events included in standard API responses');
    console.log('- ✅ No more heavy client-side computation on every render');
    
  } catch (error) {
    console.error('❌ Test failed:', error.message);
  }
}

// Run the test
testAnniversaryEventGeneration();