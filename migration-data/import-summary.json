{
  "importDate": "2025-07-24T18:46:57.349Z",
  "totalImported": 221,
  "tableStats": {
    "users": {
      "imported": 1,
      "skipped": 0,
      "total": 1
    },
    "companies": {
      "imported": 0,
      "skipped": 0,
      "total": 15
    },
    "clients": {
      "imported": 0,
      "skipped": 0,
      "total": 1
    },
    "vendors": {
      "imported": 0,
      "skipped": 0,
      "total": 1
    },
    "products": {
      "imported": 0,
      "skipped": 0,
      "total": 1
    },
    "bank_accounts": {
      "imported": 0,
      "skipped": 0,
      "total": 1
    },
    "digital_wallets": {
      "imported": 0,
      "skipped": 0,
      "total": 1
    },
    "chart_of_accounts": {
      "imported": 218,
      "skipped": 0,
      "total": 218
    },
    "tax_treatments": {
      "imported": 2,
      "skipped": 0,
      "total": 2
    },
    "invoices": {
      "imported": 0,
      "skipped": 0,
      "total": 1
    },
    "invoice_items": {
      "imported": 0,
      "skipped": 0,
      "total": 1
    },
    "invoice_payment_sources": {
      "imported": 0,
      "skipped": 0,
      "total": 1
    },
    "bookkeeping_entries": {
      "imported": 0,
      "skipped": 0,
      "total": 3
    }
  },
  "errors": [
    {
      "table": "companies",
      "record": {
        "id": 1,
        "legalName": "TechStart Solutions Inc.",
        "tradingName": "TechStart",
        "registrationNo": "TS001234",
        "registrationDate": "2022-01-15T00:00:00.000Z",
        "countryOfRegistration": "United States",
        "baseCurrency": "USD",
        "businessLicenseNr": "BL-TS-2022-001",
        "vatNumber": "VAT-TS-001234",
        "industry": "Technology",
        "entityType": "Corporation",
        "customEntityType": null,
        "fiscalYearEnd": "December 31",
        "address": "123 Silicon Valley Blvd, San Jose, CA 95110",
        "phone": "+1-408-555-0101",
        "email": "contact@techstart.com",
        "website": "https://techstart.com",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:22.984Z",
        "updatedAt": "2025-07-23T08:02:22.984Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 1,\n              ~~\n              legalName: \"TechStart Solutions Inc.\",\n              tradingName: \"TechStart\",\n              registrationNo: \"TS001234\",\n              registrationDate: new Date(\"2022-01-15T00:00:00.000Z\"),\n              countryOfRegistration: \"United States\",\n              baseCurrency: \"USD\",\n              businessLicenseNr: \"BL-TS-2022-001\",\n              vatNumber: \"VAT-TS-001234\",\n              industry: \"Technology\",\n              entityType: \"Corporation\",\n              customEntityType: null,\n              fiscalYearEnd: \"December 31\",\n              address: \"123 Silicon Valley Blvd, San Jose, CA 95110\",\n              phone: \"+1-408-555-0101\",\n              email: \"contact@techstart.com\",\n              website: \"https://techstart.com\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:22.984Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:22.984Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 2,
        "legalName": "Green Energy Systems Ltd.",
        "tradingName": "GreenPower",
        "registrationNo": "GE002345",
        "registrationDate": "2021-06-20T00:00:00.000Z",
        "countryOfRegistration": "United Kingdom",
        "baseCurrency": "GBP",
        "businessLicenseNr": "BL-GE-2021-002",
        "vatNumber": "GB-VAT-002345",
        "industry": "Energy",
        "entityType": "Limited Company",
        "customEntityType": null,
        "fiscalYearEnd": "March 31",
        "address": "45 Renewable Way, London SW1A 1AA",
        "phone": "+44-20-7946-0958",
        "email": "info@greenpower.co.uk",
        "website": "https://greenpower.co.uk",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:22.997Z",
        "updatedAt": "2025-07-23T08:02:22.997Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 2,\n              ~~\n              legalName: \"Green Energy Systems Ltd.\",\n              tradingName: \"GreenPower\",\n              registrationNo: \"GE002345\",\n              registrationDate: new Date(\"2021-06-20T00:00:00.000Z\"),\n              countryOfRegistration: \"United Kingdom\",\n              baseCurrency: \"GBP\",\n              businessLicenseNr: \"BL-GE-2021-002\",\n              vatNumber: \"GB-VAT-002345\",\n              industry: \"Energy\",\n              entityType: \"Limited Company\",\n              customEntityType: null,\n              fiscalYearEnd: \"March 31\",\n              address: \"45 Renewable Way, London SW1A 1AA\",\n              phone: \"+44-20-7946-0958\",\n              email: \"info@greenpower.co.uk\",\n              website: \"https://greenpower.co.uk\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:22.997Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:22.997Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 3,
        "legalName": "Urban Dining Concepts LLC",
        "tradingName": "Urban Eats",
        "registrationNo": "UD003456",
        "registrationDate": "2023-03-10T00:00:00.000Z",
        "countryOfRegistration": "United States",
        "baseCurrency": "USD",
        "businessLicenseNr": "BL-UD-2023-003",
        "vatNumber": "VAT-UD-003456",
        "industry": "Food & Beverage",
        "entityType": "LLC",
        "customEntityType": null,
        "fiscalYearEnd": "December 31",
        "address": "789 Food Street, New York, NY 10001",
        "phone": "+1-212-555-0789",
        "email": "hello@urbaneats.com",
        "website": "https://urbaneats.com",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:22.999Z",
        "updatedAt": "2025-07-23T08:02:22.999Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 3,\n              ~~\n              legalName: \"Urban Dining Concepts LLC\",\n              tradingName: \"Urban Eats\",\n              registrationNo: \"UD003456\",\n              registrationDate: new Date(\"2023-03-10T00:00:00.000Z\"),\n              countryOfRegistration: \"United States\",\n              baseCurrency: \"USD\",\n              businessLicenseNr: \"BL-UD-2023-003\",\n              vatNumber: \"VAT-UD-003456\",\n              industry: \"Food & Beverage\",\n              entityType: \"LLC\",\n              customEntityType: null,\n              fiscalYearEnd: \"December 31\",\n              address: \"789 Food Street, New York, NY 10001\",\n              phone: \"+1-212-555-0789\",\n              email: \"hello@urbaneats.com\",\n              website: \"https://urbaneats.com\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:22.999Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:22.999Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 4,
        "legalName": "Digital Marketing Pro Pty Ltd",
        "tradingName": "DigiPro",
        "registrationNo": "DM004567",
        "registrationDate": "2020-11-05T00:00:00.000Z",
        "countryOfRegistration": "Australia",
        "baseCurrency": "AUD",
        "businessLicenseNr": "BL-DM-2020-004",
        "vatNumber": "AU-ABN-004567",
        "industry": "Marketing",
        "entityType": "Proprietary Limited",
        "customEntityType": null,
        "fiscalYearEnd": "June 30",
        "address": "321 Marketing Lane, Sydney NSW 2000",
        "phone": "+61-2-9555-0321",
        "email": "contact@digipro.com.au",
        "website": "https://digipro.com.au",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.000Z",
        "updatedAt": "2025-07-23T08:02:23.000Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 4,\n              ~~\n              legalName: \"Digital Marketing Pro Pty Ltd\",\n              tradingName: \"DigiPro\",\n              registrationNo: \"DM004567\",\n              registrationDate: new Date(\"2020-11-05T00:00:00.000Z\"),\n              countryOfRegistration: \"Australia\",\n              baseCurrency: \"AUD\",\n              businessLicenseNr: \"BL-DM-2020-004\",\n              vatNumber: \"AU-ABN-004567\",\n              industry: \"Marketing\",\n              entityType: \"Proprietary Limited\",\n              customEntityType: null,\n              fiscalYearEnd: \"June 30\",\n              address: \"321 Marketing Lane, Sydney NSW 2000\",\n              phone: \"+61-2-9555-0321\",\n              email: \"contact@digipro.com.au\",\n              website: \"https://digipro.com.au\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.000Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.000Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 5,
        "legalName": "Fashion Forward Boutique Inc.",
        "tradingName": "FashionForward",
        "registrationNo": "FF005678",
        "registrationDate": "2019-08-12T00:00:00.000Z",
        "countryOfRegistration": "Canada",
        "baseCurrency": "CAD",
        "businessLicenseNr": "BL-FF-2019-005",
        "vatNumber": "CA-GST-005678",
        "industry": "Fashion",
        "entityType": "Corporation",
        "customEntityType": null,
        "fiscalYearEnd": "December 31",
        "address": "456 Fashion Ave, Toronto ON M5V 3A8",
        "phone": "+1-416-555-0456",
        "email": "style@fashionforward.ca",
        "website": "https://fashionforward.ca",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.002Z",
        "updatedAt": "2025-07-23T08:02:23.002Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 5,\n              ~~\n              legalName: \"Fashion Forward Boutique Inc.\",\n              tradingName: \"FashionForward\",\n              registrationNo: \"FF005678\",\n              registrationDate: new Date(\"2019-08-12T00:00:00.000Z\"),\n              countryOfRegistration: \"Canada\",\n              baseCurrency: \"CAD\",\n              businessLicenseNr: \"BL-FF-2019-005\",\n              vatNumber: \"CA-GST-005678\",\n              industry: \"Fashion\",\n              entityType: \"Corporation\",\n              customEntityType: null,\n              fiscalYearEnd: \"December 31\",\n              address: \"456 Fashion Ave, Toronto ON M5V 3A8\",\n              phone: \"+1-416-555-0456\",\n              email: \"style@fashionforward.ca\",\n              website: \"https://fashionforward.ca\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.002Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.002Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 6,
        "legalName": "Healthcare Innovation Labs GmbH",
        "tradingName": "HealthLabs",
        "registrationNo": "HL006789",
        "registrationDate": "2021-02-28T00:00:00.000Z",
        "countryOfRegistration": "Germany",
        "baseCurrency": "EUR",
        "businessLicenseNr": "BL-HL-2021-006",
        "vatNumber": "DE-VAT-006789",
        "industry": "Healthcare",
        "entityType": "GmbH",
        "customEntityType": null,
        "fiscalYearEnd": "December 31",
        "address": "78 Innovation Str, Berlin 10115",
        "phone": "+49-30-555-0078",
        "email": "research@healthlabs.de",
        "website": "https://healthlabs.de",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.005Z",
        "updatedAt": "2025-07-23T08:02:23.005Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 6,\n              ~~\n              legalName: \"Healthcare Innovation Labs GmbH\",\n              tradingName: \"HealthLabs\",\n              registrationNo: \"HL006789\",\n              registrationDate: new Date(\"2021-02-28T00:00:00.000Z\"),\n              countryOfRegistration: \"Germany\",\n              baseCurrency: \"EUR\",\n              businessLicenseNr: \"BL-HL-2021-006\",\n              vatNumber: \"DE-VAT-006789\",\n              industry: \"Healthcare\",\n              entityType: \"GmbH\",\n              customEntityType: null,\n              fiscalYearEnd: \"December 31\",\n              address: \"78 Innovation Str, Berlin 10115\",\n              phone: \"+49-30-555-0078\",\n              email: \"research@healthlabs.de\",\n              website: \"https://healthlabs.de\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.005Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.005Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 7,
        "legalName": "Construction Masters Ltd.",
        "tradingName": "BuildMasters",
        "registrationNo": "CM007890",
        "registrationDate": "2018-05-15T00:00:00.000Z",
        "countryOfRegistration": "United Kingdom",
        "baseCurrency": "GBP",
        "businessLicenseNr": "BL-CM-2018-007",
        "vatNumber": "GB-VAT-007890",
        "industry": "Construction",
        "entityType": "Limited Company",
        "customEntityType": null,
        "fiscalYearEnd": "March 31",
        "address": "92 Builder's Road, Manchester M1 1AA",
        "phone": "+44-161-555-0092",
        "email": "projects@buildmasters.co.uk",
        "website": "https://buildmasters.co.uk",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.006Z",
        "updatedAt": "2025-07-23T08:02:23.006Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 7,\n              ~~\n              legalName: \"Construction Masters Ltd.\",\n              tradingName: \"BuildMasters\",\n              registrationNo: \"CM007890\",\n              registrationDate: new Date(\"2018-05-15T00:00:00.000Z\"),\n              countryOfRegistration: \"United Kingdom\",\n              baseCurrency: \"GBP\",\n              businessLicenseNr: \"BL-CM-2018-007\",\n              vatNumber: \"GB-VAT-007890\",\n              industry: \"Construction\",\n              entityType: \"Limited Company\",\n              customEntityType: null,\n              fiscalYearEnd: \"March 31\",\n              address: \"92 Builder's Road, Manchester M1 1AA\",\n              phone: \"+44-161-555-0092\",\n              email: \"projects@buildmasters.co.uk\",\n              website: \"https://buildmasters.co.uk\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.006Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.006Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 8,
        "legalName": "Financial Advisory Services Inc.",
        "tradingName": "FinAdvise",
        "registrationNo": "FA008901",
        "registrationDate": "2017-09-22T00:00:00.000Z",
        "countryOfRegistration": "United States",
        "baseCurrency": "USD",
        "businessLicenseNr": "BL-FA-2017-008",
        "vatNumber": "VAT-FA-008901",
        "industry": "Financial Services",
        "entityType": "Corporation",
        "customEntityType": null,
        "fiscalYearEnd": "December 31",
        "address": "147 Wall Street, New York, NY 10005",
        "phone": "+1-212-555-0147",
        "email": "advice@finadvise.com",
        "website": "https://finadvise.com",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.007Z",
        "updatedAt": "2025-07-23T08:02:23.007Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 8,\n              ~~\n              legalName: \"Financial Advisory Services Inc.\",\n              tradingName: \"FinAdvise\",\n              registrationNo: \"FA008901\",\n              registrationDate: new Date(\"2017-09-22T00:00:00.000Z\"),\n              countryOfRegistration: \"United States\",\n              baseCurrency: \"USD\",\n              businessLicenseNr: \"BL-FA-2017-008\",\n              vatNumber: \"VAT-FA-008901\",\n              industry: \"Financial Services\",\n              entityType: \"Corporation\",\n              customEntityType: null,\n              fiscalYearEnd: \"December 31\",\n              address: \"147 Wall Street, New York, NY 10005\",\n              phone: \"+1-212-555-0147\",\n              email: \"advice@finadvise.com\",\n              website: \"https://finadvise.com\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.007Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.007Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 9,
        "legalName": "Educational Technology Solutions Pvt Ltd",
        "tradingName": "EduTech",
        "registrationNo": "ET009012",
        "registrationDate": "2022-07-08T00:00:00.000Z",
        "countryOfRegistration": "India",
        "baseCurrency": "INR",
        "businessLicenseNr": "BL-ET-2022-009",
        "vatNumber": "IN-GST-009012",
        "industry": "Education",
        "entityType": "Private Limited",
        "customEntityType": null,
        "fiscalYearEnd": "March 31",
        "address": "203 Tech Park, Bangalore 560001",
        "phone": "+91-80-555-0203",
        "email": "learn@edutech.in",
        "website": "https://edutech.in",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.009Z",
        "updatedAt": "2025-07-23T08:02:23.009Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 9,\n              ~~\n              legalName: \"Educational Technology Solutions Pvt Ltd\",\n              tradingName: \"EduTech\",\n              registrationNo: \"ET009012\",\n              registrationDate: new Date(\"2022-07-08T00:00:00.000Z\"),\n              countryOfRegistration: \"India\",\n              baseCurrency: \"INR\",\n              businessLicenseNr: \"BL-ET-2022-009\",\n              vatNumber: \"IN-GST-009012\",\n              industry: \"Education\",\n              entityType: \"Private Limited\",\n              customEntityType: null,\n              fiscalYearEnd: \"March 31\",\n              address: \"203 Tech Park, Bangalore 560001\",\n              phone: \"+91-80-555-0203\",\n              email: \"learn@edutech.in\",\n              website: \"https://edutech.in\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.009Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.009Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 10,
        "legalName": "Creative Media Agency LLC",
        "tradingName": "CreativeHub",
        "registrationNo": "CMA010123",
        "registrationDate": "2020-12-03T00:00:00.000Z",
        "countryOfRegistration": "United States",
        "baseCurrency": "USD",
        "businessLicenseNr": "BL-CMA-2020-010",
        "vatNumber": "VAT-CMA-010123",
        "industry": "Media",
        "entityType": "LLC",
        "customEntityType": null,
        "fiscalYearEnd": "December 31",
        "address": "88 Creative Drive, Los Angeles, CA 90210",
        "phone": "+1-323-555-0088",
        "email": "create@creativehub.com",
        "website": "https://creativehub.com",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.013Z",
        "updatedAt": "2025-07-23T08:02:23.013Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 10,\n              ~~\n              legalName: \"Creative Media Agency LLC\",\n              tradingName: \"CreativeHub\",\n              registrationNo: \"CMA010123\",\n              registrationDate: new Date(\"2020-12-03T00:00:00.000Z\"),\n              countryOfRegistration: \"United States\",\n              baseCurrency: \"USD\",\n              businessLicenseNr: \"BL-CMA-2020-010\",\n              vatNumber: \"VAT-CMA-010123\",\n              industry: \"Media\",\n              entityType: \"LLC\",\n              customEntityType: null,\n              fiscalYearEnd: \"December 31\",\n              address: \"88 Creative Drive, Los Angeles, CA 90210\",\n              phone: \"+1-323-555-0088\",\n              email: \"create@creativehub.com\",\n              website: \"https://creativehub.com\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.013Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.013Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 11,
        "legalName": "Logistics Express International SA",
        "tradingName": "LogiExpress",
        "registrationNo": "LE011234",
        "registrationDate": "2019-04-18T00:00:00.000Z",
        "countryOfRegistration": "France",
        "baseCurrency": "EUR",
        "businessLicenseNr": "BL-LE-2019-011",
        "vatNumber": "FR-TVA-011234",
        "industry": "Logistics",
        "entityType": "SA",
        "customEntityType": null,
        "fiscalYearEnd": "December 31",
        "address": "65 Transport Blvd, Paris 75001",
        "phone": "+33-1-555-0065",
        "email": "ship@logiexpress.fr",
        "website": "https://logiexpress.fr",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.015Z",
        "updatedAt": "2025-07-23T08:02:23.015Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 11,\n              ~~\n              legalName: \"Logistics Express International SA\",\n              tradingName: \"LogiExpress\",\n              registrationNo: \"LE011234\",\n              registrationDate: new Date(\"2019-04-18T00:00:00.000Z\"),\n              countryOfRegistration: \"France\",\n              baseCurrency: \"EUR\",\n              businessLicenseNr: \"BL-LE-2019-011\",\n              vatNumber: \"FR-TVA-011234\",\n              industry: \"Logistics\",\n              entityType: \"SA\",\n              customEntityType: null,\n              fiscalYearEnd: \"December 31\",\n              address: \"65 Transport Blvd, Paris 75001\",\n              phone: \"+33-1-555-0065\",\n              email: \"ship@logiexpress.fr\",\n              website: \"https://logiexpress.fr\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.015Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.015Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 12,
        "legalName": "Real Estate Ventures Corp.",
        "tradingName": "RealVentures",
        "registrationNo": "RE012345",
        "registrationDate": "2016-10-30T00:00:00.000Z",
        "countryOfRegistration": "United States",
        "baseCurrency": "USD",
        "businessLicenseNr": "BL-RE-2016-012",
        "vatNumber": "VAT-RE-012345",
        "industry": "Real Estate",
        "entityType": "Corporation",
        "customEntityType": null,
        "fiscalYearEnd": "December 31",
        "address": "555 Property Plaza, Miami FL 33101",
        "phone": "+1-305-555-0555",
        "email": "invest@realventures.com",
        "website": "https://realventures.com",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.017Z",
        "updatedAt": "2025-07-23T08:02:23.017Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 12,\n              ~~\n              legalName: \"Real Estate Ventures Corp.\",\n              tradingName: \"RealVentures\",\n              registrationNo: \"RE012345\",\n              registrationDate: new Date(\"2016-10-30T00:00:00.000Z\"),\n              countryOfRegistration: \"United States\",\n              baseCurrency: \"USD\",\n              businessLicenseNr: \"BL-RE-2016-012\",\n              vatNumber: \"VAT-RE-012345\",\n              industry: \"Real Estate\",\n              entityType: \"Corporation\",\n              customEntityType: null,\n              fiscalYearEnd: \"December 31\",\n              address: \"555 Property Plaza, Miami FL 33101\",\n              phone: \"+1-305-555-0555\",\n              email: \"invest@realventures.com\",\n              website: \"https://realventures.com\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.017Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.017Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 13,
        "legalName": "Automotive Solutions Ltd.",
        "tradingName": "AutoSolutions",
        "registrationNo": "AS013456",
        "registrationDate": "2023-01-25T00:00:00.000Z",
        "countryOfRegistration": "Japan",
        "baseCurrency": "JPY",
        "businessLicenseNr": "BL-AS-2023-013",
        "vatNumber": "JP-VAT-013456",
        "industry": "Automotive",
        "entityType": "Kabushiki Kaisha",
        "customEntityType": null,
        "fiscalYearEnd": "March 31",
        "address": "12-3 Auto Street, Tokyo 100-0001",
        "phone": "+81-3-555-0123",
        "email": "service@autosolutions.jp",
        "website": "https://autosolutions.jp",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.019Z",
        "updatedAt": "2025-07-23T08:02:23.019Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 13,\n              ~~\n              legalName: \"Automotive Solutions Ltd.\",\n              tradingName: \"AutoSolutions\",\n              registrationNo: \"AS013456\",\n              registrationDate: new Date(\"2023-01-25T00:00:00.000Z\"),\n              countryOfRegistration: \"Japan\",\n              baseCurrency: \"JPY\",\n              businessLicenseNr: \"BL-AS-2023-013\",\n              vatNumber: \"JP-VAT-013456\",\n              industry: \"Automotive\",\n              entityType: \"Kabushiki Kaisha\",\n              customEntityType: null,\n              fiscalYearEnd: \"March 31\",\n              address: \"12-3 Auto Street, Tokyo 100-0001\",\n              phone: \"+81-3-555-0123\",\n              email: \"service@autosolutions.jp\",\n              website: \"https://autosolutions.jp\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.019Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.019Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 14,
        "legalName": "Sports & Recreation Hub Pty Ltd",
        "tradingName": "SportHub",
        "registrationNo": "SR014567",
        "registrationDate": "2021-08-14T00:00:00.000Z",
        "countryOfRegistration": "Australia",
        "baseCurrency": "AUD",
        "businessLicenseNr": "BL-SR-2021-014",
        "vatNumber": "AU-ABN-014567",
        "industry": "Sports",
        "entityType": "Proprietary Limited",
        "customEntityType": null,
        "fiscalYearEnd": "June 30",
        "address": "99 Sports Complex, Melbourne VIC 3000",
        "phone": "+61-3-555-0099",
        "email": "play@sporthub.com.au",
        "website": "https://sporthub.com.au",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.020Z",
        "updatedAt": "2025-07-23T08:02:23.020Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 14,\n              ~~\n              legalName: \"Sports & Recreation Hub Pty Ltd\",\n              tradingName: \"SportHub\",\n              registrationNo: \"SR014567\",\n              registrationDate: new Date(\"2021-08-14T00:00:00.000Z\"),\n              countryOfRegistration: \"Australia\",\n              baseCurrency: \"AUD\",\n              businessLicenseNr: \"BL-SR-2021-014\",\n              vatNumber: \"AU-ABN-014567\",\n              industry: \"Sports\",\n              entityType: \"Proprietary Limited\",\n              customEntityType: null,\n              fiscalYearEnd: \"June 30\",\n              address: \"99 Sports Complex, Melbourne VIC 3000\",\n              phone: \"+61-3-555-0099\",\n              email: \"play@sporthub.com.au\",\n              website: \"https://sporthub.com.au\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.020Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.020Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "companies",
      "record": {
        "id": 15,
        "legalName": "Environmental Consulting Group Inc.",
        "tradingName": "EcoConsult",
        "registrationNo": "EC015678",
        "registrationDate": "2018-12-07T00:00:00.000Z",
        "countryOfRegistration": "Canada",
        "baseCurrency": "CAD",
        "businessLicenseNr": "BL-EC-2018-015",
        "vatNumber": "CA-GST-015678",
        "industry": "Environmental",
        "entityType": "Corporation",
        "customEntityType": null,
        "fiscalYearEnd": "December 31",
        "address": "777 Green Way, Vancouver BC V6B 1A1",
        "phone": "+1-604-555-0777",
        "email": "consult@ecoconsult.ca",
        "website": "https://ecoconsult.ca",
        "status": "Active",
        "logo": null,
        "facebookUrl": null,
        "instagramUrl": null,
        "xUrl": null,
        "youtubeUrl": null,
        "whatsappNumber": null,
        "telegramNumber": null,
        "createdAt": "2025-07-23T08:02:23.021Z",
        "updatedAt": "2025-07-23T08:02:23.021Z",
        "mainContactEmail": null,
        "mainContactType": null
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: 15,\n              ~~\n              legalName: \"Environmental Consulting Group Inc.\",\n              tradingName: \"EcoConsult\",\n              registrationNo: \"EC015678\",\n              registrationDate: new Date(\"2018-12-07T00:00:00.000Z\"),\n              countryOfRegistration: \"Canada\",\n              baseCurrency: \"CAD\",\n              businessLicenseNr: \"BL-EC-2018-015\",\n              vatNumber: \"CA-GST-015678\",\n              industry: \"Environmental\",\n              entityType: \"Corporation\",\n              customEntityType: null,\n              fiscalYearEnd: \"December 31\",\n              address: \"777 Green Way, Vancouver BC V6B 1A1\",\n              phone: \"+1-604-555-0777\",\n              email: \"consult@ecoconsult.ca\",\n              website: \"https://ecoconsult.ca\",\n              status: \"Active\",\n              logo: null,\n              facebookUrl: null,\n              instagramUrl: null,\n              xUrl: null,\n              youtubeUrl: null,\n              whatsappNumber: null,\n              telegramNumber: null,\n              createdAt: new Date(\"2025-07-23T08:02:23.021Z\"),\n              updatedAt: new Date(\"2025-07-23T08:02:23.021Z\"),\n              mainContactEmail: null,\n              mainContactType: null,\n          ?   bankAccounts?: BankAccountCreateNestedManyWithoutCompanyInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutCompanyInput,\n          ?   businessCards?: BusinessCardCreateNestedManyWithoutCompanyInput,\n          ?   calendarEvents?: CalendarEventCreateNestedManyWithoutCompanyRecordInput,\n          ?   chartOfAccounts?: ChartOfAccountCreateNestedManyWithoutCompanyInput,\n          ?   clients?: ClientCreateNestedManyWithoutCompanyInput,\n          ?   companyAccounts?: CompanyAccountCreateNestedManyWithoutCompanyInput,\n          ?   companyMemberships?: CompanyMembershipCreateNestedManyWithoutCompanyInput,\n          ?   digitalWallets?: DigitalWalletCreateNestedManyWithoutCompanyInput,\n          ?   invoices?: InvoiceCreateNestedManyWithoutCompanyInput,\n          ?   journalEntries?: JournalEntryCreateNestedManyWithoutCompanyInput,\n          ?   notes?: NoteCreateNestedManyWithoutCompanyInput,\n          ?   paymentMethods?: PaymentMethodCreateNestedManyWithoutCompanyInput,\n          ?   products?: ProductCreateNestedManyWithoutCompanyInput,\n          ?   representatives?: RepresentativeCreateNestedManyWithoutCompanyInput,\n          ?   shareholders?: ShareholderCreateNestedManyWithoutCompanyInput,\n          ?   taxTreatments?: TaxTreatmentCreateNestedManyWithoutCompanyInput,\n          ?   transactions?: TransactionCreateNestedManyWithoutCompanyInput,\n          ?   vendors?: VendorCreateNestedManyWithoutCompanyInput\n            }\n          })\n\nUnknown argument `id`. Available options are marked with ?."
    },
    {
      "table": "clients",
      "record": {
        "id": "cmdhl7zf600079k86ufx2uab4",
        "clientType": "LEGAL_ENTITY",
        "name": "Helsinki Vesi",
        "contactPersonName": "Fedor Levin",
        "contactPersonPosition": "AM",
        "email": "fedor@helsinkingvesi.fi",
        "phone": null,
        "website": null,
        "address": null,
        "city": "Helsinki",
        "zipCode": null,
        "country": "Finland",
        "industry": "Construction",
        "status": "ACTIVE",
        "notes": null,
        "createdAt": "2025-07-24T16:09:09.906Z",
        "updatedAt": "2025-07-24T16:09:09.906Z",
        "lastInvoiceDate": null,
        "totalInvoiced": 0,
        "totalPaid": 0,
        "registrationNumber": "1234567",
        "vatNumber": "FI13456788",
        "passportNumber": null,
        "dateOfBirth": null,
        "company": {
          "connect": {
            "id": 15
          }
        }
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: \"cmdhl7zf600079k86ufx2uab4\",\n              clientType: \"LEGAL_ENTITY\",\n              name: \"Helsinki Vesi\",\n              contactPersonName: \"Fedor Levin\",\n              contactPersonPosition: \"AM\",\n              email: \"fedor@helsinkingvesi.fi\",\n              website: null,\n              address: null,\n              city: \"Helsinki\",\n              zipCode: null,\n              country: \"Finland\",\n              industry: \"Construction\",\n              status: \"ACTIVE\",\n              notes: null,\n              createdAt: new Date(\"2025-07-24T16:09:09.906Z\"),\n              updatedAt: new Date(\"2025-07-24T16:09:09.906Z\"),\n              lastInvoiceDate: null,\n              totalInvoiced: 0,\n              totalPaid: 0,\n              registrationNumber: \"1234567\",\n              vatNumber: \"FI13456788\",\n              passportNumber: null,\n              dateOfBirth: null,\n              company: {\n                connect: {\n                  id: 15\n                }\n              },\n          +   phone: String\n            }\n          })\n\nArgument `phone` must not be null."
    },
    {
      "table": "vendors",
      "record": {
        "id": "cmdhl9yuj000b9k86x3r6pvxr",
        "companyName": "Nicole",
        "contactPerson": "Amerling Nika",
        "contactEmail": "niko@amerlika.com",
        "phone": null,
        "website": null,
        "paymentTerms": "15",
        "currency": "USD",
        "paymentMethod": "Crypto",
        "billingAddress": "Costa rica",
        "itemsServicesSold": null,
        "notes": null,
        "companyRegistrationNr": "43434345335",
        "vatNr": "IE34678821",
        "vendorCountry": "Andorra",
        "isActive": true,
        "createdAt": "2025-07-24T16:10:42.475Z",
        "updatedAt": "2025-07-24T16:10:42.475Z",
        "company": {
          "connect": {
            "id": 15
          }
        }
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create(\nAn operation failed because it depends on one or more records that were required but not found. No 'Company' record (needed to inline the relation on 'Vendor' record(s)) was found for a nested connect on one-to-many relation 'CompanyToVendor'."
    },
    {
      "table": "products",
      "record": {
        "id": "cmdhl9tuv00099k86wsy7pe3f",
        "name": "Unlimited Internet",
        "description": "",
        "price": 10,
        "currency": "USD",
        "cost": 5,
        "costCurrency": "USD",
        "isActive": true,
        "vendorId": null,
        "createdAt": "2025-07-24T16:10:36.006Z",
        "updatedAt": "2025-07-24T16:10:36.006Z",
        "company": {
          "connect": {
            "id": 15
          }
        }
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: \"cmdhl9tuv00099k86wsy7pe3f\",\n              name: \"Unlimited Internet\",\n              description: \"\",\n              price: 10,\n              currency: \"USD\",\n              cost: 5,\n              costCurrency: \"USD\",\n              isActive: true,\n              vendorId: null,\n              ~~~~~~~~\n              createdAt: new Date(\"2025-07-24T16:10:36.006Z\"),\n              updatedAt: new Date(\"2025-07-24T16:10:36.006Z\"),\n              company: {\n                connect: {\n                  id: 15\n                }\n              },\n          ?   invoiceItems?: InvoiceItemCreateNestedManyWithoutProductInput,\n          ?   vendor?: VendorCreateNestedOneWithoutProductsInput\n            }\n          })\n\nUnknown argument `vendorId`. Did you mean `vendor`? Available options are marked with ?."
    },
    {
      "table": "bank_accounts",
      "record": {
        "id": "cmdhl5eay00039k869n2a3ylr",
        "bankName": "LHV Bank",
        "bankAddress": "Tartu mnt 12-13",
        "currency": "USD",
        "iban": "EE243545465767",
        "swiftCode": "LHVBE223X",
        "accountNumber": null,
        "accountName": "Environmental Consulting Group Inc.",
        "isActive": true,
        "createdAt": "2025-07-24T16:07:09.226Z",
        "updatedAt": "2025-07-24T16:07:09.226Z",
        "notes": null,
        "company": {
          "connect": {
            "id": 15
          }
        }
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create(\nAn operation failed because it depends on one or more records that were required but not found. No 'Company' record (needed to inline the relation on 'BankAccount' record(s)) was found for a nested connect on one-to-many relation 'BankAccountToCompany'."
    },
    {
      "table": "digital_wallets",
      "record": {
        "id": "cmdhl642q00059k864fan4qno",
        "walletType": "CRYPTO",
        "walletName": "ERC-20",
        "walletAddress": "0xETHcfdfdgferFDGbhdWallet1",
        "currency": "USDC",
        "currencies": "USDC, USDT",
        "description": null,
        "blockchain": "Ethereum",
        "isActive": true,
        "createdAt": "2025-07-24T16:07:42.626Z",
        "updatedAt": "2025-07-24T16:07:42.626Z",
        "notes": null,
        "company": {
          "connect": {
            "id": 15
          }
        }
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: \"cmdhl642q00059k864fan4qno\",\n              walletType: \"CRYPTO\",\n              walletName: \"ERC-20\",\n              walletAddress: \"0xETHcfdfdgferFDGbhdWallet1\",\n              currency: \"USDC\",\n              currencies: \"USDC, USDT\",\n              blockchain: \"Ethereum\",\n              isActive: true,\n              createdAt: new Date(\"2025-07-24T16:07:42.626Z\"),\n              updatedAt: new Date(\"2025-07-24T16:07:42.626Z\"),\n              notes: null,\n              company: {\n                connect: {\n                  id: 15\n                }\n              },\n          +   description: String\n            }\n          })\n\nArgument `description` must not be null."
    },
    {
      "table": "invoices",
      "record": {
        "id": "cmdhlaz0f000d9k86hz9agmky",
        "invoiceNumber": "INV-2025-077973",
        "clientName": "Helsinki Vesi",
        "clientEmail": "fedor@helsinkingvesi.fi",
        "clientAddress": null,
        "subtotal": 10,
        "currency": "USD",
        "status": "DRAFT",
        "dueDate": "2025-08-23T00:00:00.000Z",
        "issueDate": "2025-07-24T00:00:00.000Z",
        "paidDate": null,
        "createdAt": "2025-07-24T16:11:29.344Z",
        "updatedAt": "2025-07-24T16:11:29.344Z",
        "template": "professional",
        "taxRate": 2,
        "taxAmount": 0.2,
        "totalAmount": 10.2,
        "notes": null,
        "clientId": "cmdhl7zf600079k86ufx2uab4",
        "company": {
          "connect": {
            "id": 15
          }
        }
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: \"cmdhlaz0f000d9k86hz9agmky\",\n              invoiceNumber: \"INV-2025-077973\",\n              clientName: \"Helsinki Vesi\",\n              clientEmail: \"fedor@helsinkingvesi.fi\",\n              clientAddress: null,\n              subtotal: 10,\n              currency: \"USD\",\n              status: \"DRAFT\",\n              dueDate: new Date(\"2025-08-23T00:00:00.000Z\"),\n              issueDate: new Date(\"2025-07-24T00:00:00.000Z\"),\n              paidDate: null,\n              createdAt: new Date(\"2025-07-24T16:11:29.344Z\"),\n              updatedAt: new Date(\"2025-07-24T16:11:29.344Z\"),\n              template: \"professional\",\n              taxRate: 2,\n              taxAmount: 0.2,\n              totalAmount: 10.2,\n              notes: null,\n              clientId: \"cmdhl7zf600079k86ufx2uab4\",\n              ~~~~~~~~\n              company: {\n                connect: {\n                  id: 15\n                }\n              },\n          ?   items?: InvoiceItemCreateNestedManyWithoutInvoiceInput,\n          ?   client?: ClientCreateNestedOneWithoutInvoicesInput,\n          ?   paymentMethodInvoices?: PaymentMethodInvoiceCreateNestedManyWithoutInvoiceInput,\n          ?   paymentSources?: InvoicePaymentSourceCreateNestedManyWithoutInvoiceInput,\n          ?   bookkeepingEntries?: BookkeepingEntryCreateNestedManyWithoutInvoiceInput\n            }\n          })\n\nUnknown argument `clientId`. Did you mean `client`? Available options are marked with ?."
    },
    {
      "table": "invoice_items",
      "record": {
        "id": "cmdhlaz0i000e9k862qyoxm0k",
        "invoiceId": "cmdhlaz0f000d9k86hz9agmky",
        "productId": "cmdhl9tuv00099k86wsy7pe3f",
        "productName": "Unlimited Internet",
        "description": null,
        "quantity": 1,
        "unitPrice": 10,
        "currency": "USD",
        "total": 10,
        "createdAt": "2025-07-24T16:11:29.346Z",
        "updatedAt": "2025-07-24T16:11:29.346Z"
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: \"cmdhlaz0i000e9k862qyoxm0k\",\n              invoiceId: \"cmdhlaz0f000d9k86hz9agmky\",\n              productId: \"cmdhl9tuv00099k86wsy7pe3f\",\n              productName: \"Unlimited Internet\",\n              description: null,\n              quantity: 1,\n              unitPrice: 10,\n              currency: \"USD\",\n              total: 10,\n              createdAt: new Date(\"2025-07-24T16:11:29.346Z\"),\n              updatedAt: new Date(\"2025-07-24T16:11:29.346Z\"),\n          +   invoice: {\n          +     create: InvoiceCreateWithoutItemsInput | InvoiceUncheckedCreateWithoutItemsInput,\n          +     connectOrCreate: InvoiceCreateOrConnectWithoutItemsInput,\n          +     connect: InvoiceWhereUniqueInput\n          +   }\n            }\n          })\n\nArgument `invoice` is missing."
    },
    {
      "table": "invoice_payment_sources",
      "record": {
        "id": "cmdhlaz0m000f9k86ektnauvy",
        "invoiceId": "cmdhlaz0f000d9k86hz9agmky",
        "sourceType": "BANK_ACCOUNT",
        "sourceId": "cmdhl5eay00039k869n2a3ylr",
        "createdAt": "2025-07-24T16:11:29.350Z"
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create(\nForeign key constraint violated on the constraint: `invoice_payment_sources_invoiceId_fkey`"
    },
    {
      "table": "bookkeeping_entries",
      "record": {
        "id": "cmdhc7z2y00019kc7v31f78ix",
        "type": "revenue",
        "category": "Sales Revenue",
        "subcategory": null,
        "description": null,
        "amount": 1,
        "currency": "USD",
        "date": "2025-07-24T00:00:00.000Z",
        "reference": null,
        "notes": null,
        "accountId": null,
        "accountType": "bank",
        "cogs": 0,
        "cogsPaid": 0,
        "vendorInvoice": null,
        "isFromInvoice": false,
        "invoiceId": null,
        "chartOfAccountsId": null,
        "linkedIncomeId": null,
        "createdAt": "2025-07-24T11:57:12.921Z",
        "updatedAt": "2025-07-24T14:05:04.035Z",
        "company": {
          "connect": {
            "id": 15
          }
        }
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: \"cmdhc7z2y00019kc7v31f78ix\",\n              type: \"revenue\",\n              category: \"Sales Revenue\",\n              subcategory: null,\n              description: null,\n              amount: 1,\n              currency: \"USD\",\n              date: new Date(\"2025-07-24T00:00:00.000Z\"),\n              reference: null,\n              notes: null,\n              accountId: null,\n              ~~~~~~~~~\n              accountType: \"bank\",\n              cogs: 0,\n              cogsPaid: 0,\n              vendorInvoice: null,\n              isFromInvoice: false,\n              invoiceId: null,\n              chartOfAccountsId: null,\n              linkedIncomeId: null,\n              createdAt: new Date(\"2025-07-24T11:57:12.921Z\"),\n              updatedAt: new Date(\"2025-07-24T14:05:04.035Z\"),\n              company: {\n                connect: {\n                  id: 15\n                }\n              },\n          ?   account?: CompanyAccountCreateNestedOneWithoutEntriesInput,\n          ?   invoice?: InvoiceCreateNestedOneWithoutBookkeepingEntriesInput,\n          ?   chartOfAccount?: ChartOfAccountCreateNestedOneWithoutBookkeepingEntriesInput,\n          ?   linkedIncome?: BookkeepingEntryCreateNestedOneWithoutLinkedExpensesInput,\n          ?   linkedExpenses?: BookkeepingEntryCreateNestedManyWithoutLinkedIncomeInput,\n          ?   transaction?: TransactionCreateNestedOneWithoutLinkedEntryInput\n            }\n          })\n\nUnknown argument `accountId`. Did you mean `account`? Available options are marked with ?."
    },
    {
      "table": "bookkeeping_entries",
      "record": {
        "id": "cmdhcbuh400039kc73ly993li",
        "type": "expense",
        "category": "Cost of Service",
        "subcategory": null,
        "description": null,
        "amount": 0.01,
        "currency": "USD",
        "date": "2025-07-24T00:00:00.000Z",
        "reference": null,
        "notes": null,
        "accountId": null,
        "accountType": "bank",
        "cogs": 0,
        "cogsPaid": 0,
        "vendorInvoice": "123ssd",
        "isFromInvoice": false,
        "invoiceId": null,
        "chartOfAccountsId": null,
        "linkedIncomeId": "cmdhc7z2y00019kc7v31f78ix",
        "createdAt": "2025-07-24T12:00:13.576Z",
        "updatedAt": "2025-07-24T14:16:42.165Z",
        "company": {
          "connect": {
            "id": 15
          }
        }
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: \"cmdhcbuh400039kc73ly993li\",\n              type: \"expense\",\n              category: \"Cost of Service\",\n              subcategory: null,\n              description: null,\n              amount: 0.01,\n              currency: \"USD\",\n              date: new Date(\"2025-07-24T00:00:00.000Z\"),\n              reference: null,\n              notes: null,\n              accountId: null,\n              ~~~~~~~~~\n              accountType: \"bank\",\n              cogs: 0,\n              cogsPaid: 0,\n              vendorInvoice: \"123ssd\",\n              isFromInvoice: false,\n              invoiceId: null,\n              chartOfAccountsId: null,\n              linkedIncomeId: \"cmdhc7z2y00019kc7v31f78ix\",\n              createdAt: new Date(\"2025-07-24T12:00:13.576Z\"),\n              updatedAt: new Date(\"2025-07-24T14:16:42.165Z\"),\n              company: {\n                connect: {\n                  id: 15\n                }\n              },\n          ?   account?: CompanyAccountCreateNestedOneWithoutEntriesInput,\n          ?   invoice?: InvoiceCreateNestedOneWithoutBookkeepingEntriesInput,\n          ?   chartOfAccount?: ChartOfAccountCreateNestedOneWithoutBookkeepingEntriesInput,\n          ?   linkedIncome?: BookkeepingEntryCreateNestedOneWithoutLinkedExpensesInput,\n          ?   linkedExpenses?: BookkeepingEntryCreateNestedManyWithoutLinkedIncomeInput,\n          ?   transaction?: TransactionCreateNestedOneWithoutLinkedEntryInput\n            }\n          })\n\nUnknown argument `accountId`. Did you mean `account`? Available options are marked with ?."
    },
    {
      "table": "bookkeeping_entries",
      "record": {
        "id": "cmdhkzlm100019k86hmjltk0m",
        "type": "revenue",
        "category": "Sales Revenue",
        "subcategory": null,
        "description": null,
        "amount": 1000000,
        "currency": "USD",
        "date": "2024-12-30T00:00:00.000Z",
        "reference": null,
        "notes": null,
        "accountId": null,
        "accountType": "bank",
        "cogs": 0,
        "cogsPaid": 0,
        "vendorInvoice": null,
        "isFromInvoice": false,
        "invoiceId": null,
        "chartOfAccountsId": null,
        "linkedIncomeId": null,
        "createdAt": "2025-07-24T16:02:38.760Z",
        "updatedAt": "2025-07-24T16:02:38.760Z",
        "company": {
          "connect": {
            "id": 15
          }
        }
      },
      "error": "\nInvalid `this.prisma[modelName].create()` invocation in\n/Users/viktorj/Desktop/ClaudeCode/eazybizy/scripts/postgresql-data-import.js:272:42\n\n  269 \n  270 for (const record of batch) {\n  271   try {\n→ 272     await this.prisma[modelName].create({\n            data: {\n              id: \"cmdhkzlm100019k86hmjltk0m\",\n              type: \"revenue\",\n              category: \"Sales Revenue\",\n              subcategory: null,\n              description: null,\n              amount: 1000000,\n              currency: \"USD\",\n              date: new Date(\"2024-12-30T00:00:00.000Z\"),\n              reference: null,\n              notes: null,\n              accountId: null,\n              ~~~~~~~~~\n              accountType: \"bank\",\n              cogs: 0,\n              cogsPaid: 0,\n              vendorInvoice: null,\n              isFromInvoice: false,\n              invoiceId: null,\n              chartOfAccountsId: null,\n              linkedIncomeId: null,\n              createdAt: new Date(\"2025-07-24T16:02:38.760Z\"),\n              updatedAt: new Date(\"2025-07-24T16:02:38.760Z\"),\n              company: {\n                connect: {\n                  id: 15\n                }\n              },\n          ?   account?: CompanyAccountCreateNestedOneWithoutEntriesInput,\n          ?   invoice?: InvoiceCreateNestedOneWithoutBookkeepingEntriesInput,\n          ?   chartOfAccount?: ChartOfAccountCreateNestedOneWithoutBookkeepingEntriesInput,\n          ?   linkedIncome?: BookkeepingEntryCreateNestedOneWithoutLinkedExpensesInput,\n          ?   linkedExpenses?: BookkeepingEntryCreateNestedManyWithoutLinkedIncomeInput,\n          ?   transaction?: TransactionCreateNestedOneWithoutLinkedEntryInput\n            }\n          })\n\nUnknown argument `accountId`. Did you mean `account`? Available options are marked with ?."
    }
  ],
  "importOrder": [
    "users",
    "companies",
    "company_memberships",
    "audit_logs",
    "shareholders",
    "representatives",
    "clients",
    "vendors",
    "products",
    "bank_accounts",
    "digital_wallets",
    "payment_methods",
    "company_accounts",
    "chart_of_accounts",
    "tax_treatments",
    "invoices",
    "invoice_items",
    "payment_method_invoices",
    "invoice_payment_sources",
    "bookkeeping_entries",
    "transactions",
    "transaction_attachments",
    "journal_entries",
    "journal_entry_lines",
    "calendar_events",
    "google_calendar_syncs",
    "auto_generated_event_syncs",
    "notes",
    "business_cards"
  ]
}